<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.10.2.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd">

	<context:annotation-config />

	<mongo:mongo id="shop" host="${shop.mongo.host}"
		port="${shop.mongo.port}">
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}"
			socket-keep-alive="${mongo.socketKeepAlive}" socket-timeout="${mongo.socketTimeout}"
			slave-ok="${mongo.slaveOk}" write-number="1" write-timeout="0"
			write-fsync="true" />
	</mongo:mongo>
	<mongo:db-factory mongo-ref="shop"
		id="shopDbFactory" dbname="${shop.mongo.dbName}"
		username="${shop.mongo.dbUser}" password="${shop.mongo.dbPwd}" />
	<bean id="shopTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="shopDbFactory" />
	</bean>
	<bean id="inventoryCacheTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="shopDbFactory" />
	</bean>
	
	<mongo:mongo id="cms" host="${cms.mongo.host}"
		port="${cms.mongo.port}">
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}"
			socket-keep-alive="${mongo.socketKeepAlive}" socket-timeout="${mongo.socketTimeout}"
			slave-ok="${mongo.slaveOk}" write-number="1" write-timeout="0"
			write-fsync="true" />
	</mongo:mongo>
	<mongo:db-factory mongo-ref="cms"
		id="cmsDbFactory" dbname="${cms.mongo.dbName}"
		username="${cms.mongo.dbUser}" password="${cms.mongo.dbPwd}" />
	<bean id="cmsTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="cmsDbFactory" />
	</bean>
		
	<bean id="productInventoryDataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.inventory.url}" />
		<property name="username" value="${jdbc.inventory.username}" />
		<property name="password" value="${jdbc.inventory.password}" />
		<property name="initialSize" value="10" />
	</bean>

	<bean id="productInventoryJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="productInventoryDataSource" />
	</bean>
	
	<bean id="jdbcTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="productInventoryDataSource" />
	</bean>
	
</beans>